---
# This workflow will build a Docker image and push it to Docker Hub
#
# Required repo secrets:
# - DOCKERHUB_TOKEN
#
# Required repo variables:
# - DOCKERHUB_USERNAME
# - DOCKERHUB_REPONAME


name: Build docker image and publish to Docker Hub

on:
  push:
    tags:
      - "v*"


jobs:
  publish:
    name: Publish image
    runs-on: ubuntu-latest
    environment: production

    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: vars
        run: |
          version=${GITHUB_REF_NAME#v}
          echo "version=$version" >> $GITHUB_OUTPUT

        #echo "major_minor=$(echo $version | cut -d. -f1,2)" >> $GITHUB_OUTPUT
        #echo "major=$(echo $version | cut -d. -f1)" >> $GITHUB_OUTPUT

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build, tag, and push image to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPONAME }}:${{ steps.vars.outputs.version }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPONAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Move new cache into place
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

#    - name: Build, tag, and push image to Docker Hub
#      id: build-image
#      env:
#        #IMAGE_TAG: ${{ github.ref_type }}-${{ github.ref_name }}
#        IMAGE_TAG: ${{ github.ref_name }}
#        REGISTRY: ${{ vars.DOCKERHUB_USERNAME }}
#      run: |
#        docker build -t $REGISTRY/$REPO_NAME:$IMAGE_TAG .
#
#        docker push $REGISTRY/$REPO_NAME:$IMAGE_TAG
#
#        docker tag $REGISTRY/$REPO_NAME:$IMAGE_TAG $REGISTRY/$REPO_NAME:latest
#        docker push $REGISTRY/$REPO_NAME:latest
#
#        echo "image=$REGISTRY/$REPO_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT
